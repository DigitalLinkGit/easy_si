{% extends 'base.html.twig' %}
{% block title %}Edition du rendu
{% endblock %}

{% block body %}
	<div class="container my-4">
		{% include 'global/partials/_page_header.html.twig' with {
        title: 'Edition du rendu'
        } %}

		{{ form_start(form) }}
		{# HEADER #}
		<div class="row mb-3">
			<div class="col-10">
				{{ form_row(form.renderTitle) }}
			</div>
			<div class="col-2">
				{{ form_row(form.renderTitleLevel) }}
			</div>
		</div>


		<div class="row">
			{# EDITOR #}
			<div class="col-10">
				{{ form_row(form.renderTemplate) }}
			</div>
			{# AVAILABLE VARIABLES #}
			Variables disponibles
			<div class="col-2">
				{% for variable in variables %}
					<code>[{{ variable }}]</code>
				{% else %}
					Aucune variable disponible
				{% endfor %}
			</div>
		</div>

		<button type="button" class="btn btn-sm btn-outline-primary mt-2" id="add-render-result">
			Ajouter une variable calculée
		</button>
		<h5 class="mt-4">Variables calculées</h5>

		<div id="render-results-wrapper" data-prototype="{{ form_widget(form.results.vars.prototype)|e('html_attr') }}">
			{% for resultForm in form.results %}
				<div class="d-flex align-items-center gap-2 mb-2 render-result-entry">
					{{ form_widget(resultForm.name) }}
					{{ form_widget(resultForm.expression) }}
					<button type="button" class="btn btn-sm btn-outline-primary remove-result"><i class="bi bi-trash"></i></button>
				</div>
			{% endfor %}
		</div>

		<button class="btn btn-primary">Enregistrer</button>

		{{ form_end(form) }}
	</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const wrapper = document.getElementById('render-results-wrapper');
    const addButton = document.getElementById('add-render-result');
    const prototype = wrapper.dataset.prototype;
    let index = wrapper.children.length;

    addButton.addEventListener('click', () => {
        const newFormHtml = prototype.replace(/__name__/g, index++);
        const entry = document.createElement('div');
        entry.className = 'render-result-entry d-flex align-items-center gap-2 mb-2';
        entry.innerHTML = newFormHtml;

        const removeBtn = document.createElement('button');
        removeBtn.type = 'button';
        removeBtn.className = 'btn btn-sm btn-outline-danger remove-result ms-2';
        removeBtn.textContent = '×';
        removeBtn.addEventListener('click', () => entry.remove());

        entry.appendChild(removeBtn);
        wrapper.appendChild(entry);
    });

    // Suppression des entrées existantes
    document.querySelectorAll('.remove-result').forEach(btn => {
        btn.addEventListener('click', () => {
            btn.closest('.render-result-entry')?.remove();
        });
    });
});


</script>
{% endblock %}
